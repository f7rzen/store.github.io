// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/products": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех товаров из базы данных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Получить все товары",
                "responses": {
                    "200": {
                        "description": "Список продуктов",
                        "schema": {
                            "$ref": "#/definitions/admin.GetResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить товары",
                        "schema": {
                            "$ref": "#/definitions/admin.GetError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Добавить новый товар в базу данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Создание товара",
                "parameters": [
                    {
                        "description": "Параметры нового товара",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/admin.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/admin.CreateError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/admin.CreateError"
                        }
                    }
                }
            }
        },
        "/admin/products/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет информацию о товаре по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Обновить товар",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID товара",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновляемые данные товара",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный товар",
                        "schema": {
                            "$ref": "#/definitions/admin.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/admin.UpdateError"
                        }
                    },
                    "404": {
                        "description": "Товар не найден",
                        "schema": {
                            "$ref": "#/definitions/admin.UpdateError"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить товар",
                        "schema": {
                            "$ref": "#/definitions/admin.UpdateError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удалить товар из базы данных по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Удаление товара",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID товара",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Товар успешно удален",
                        "schema": {
                            "$ref": "#/definitions/admin.DeleteError"
                        }
                    },
                    "404": {
                        "description": "Товар не найден",
                        "schema": {
                            "$ref": "#/definitions/admin.DeleteError"
                        }
                    },
                    "500": {
                        "description": "Не удалось удалить товар",
                        "schema": {
                            "$ref": "#/definitions/admin.DeleteError"
                        }
                    }
                }
            }
        },
        "/admin/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Принимает Excel файл с товарами, парсит его содержимое и сохраняет продукты в базу данных",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Загрузить Excel файл и сохранить товары",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Excel файл с данными о товарах",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Товары успешно добавлены в базу данных",
                        "schema": {
                            "$ref": "#/definitions/admin.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось получить файл",
                        "schema": {
                            "$ref": "#/definitions/admin.UploadError"
                        }
                    },
                    "500": {
                        "description": "Ошибка обработки или сохранения данных",
                        "schema": {
                            "$ref": "#/definitions/admin.UploadError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизует пользователя, возвращая JWT-токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Параметры авторизации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Регистрирует нового пользователя в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Параметры регистрации",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.SignupErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.CreateError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "admin.CreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "admin.DeleteError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "admin.GetError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "admin.GetResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.ProductResponse"
                    }
                }
            }
        },
        "admin.ProductResponse": {
            "type": "object",
            "properties": {
                "Created_at": {
                    "type": "string"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Updated_at": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "admin.UpdateError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "admin.UploadError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "admin.UploadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.LoginErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid email or password"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Login successful"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "auth.SignupErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid JSON"
                }
            }
        },
        "auth.SignupRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "auth.SignupResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User registered successfully"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "\u003cb\u003eEnter the token with the: ` + "`" + `Bearer ` + "`" + ` prefix, e.g. \"Bearer eeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVJ9...\"\u003c/b\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Store Admin API",
	Description:      "API server for Admin Panel",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
